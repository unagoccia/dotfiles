# Your keymap
#
# Atom keymaps work similarly to style sheets. Just as style sheets use
# selectors to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# 'atom-text-editor':
#   'enter': 'editor:newline'
#
# 'atom-workspace':
#   'ctrl-shift-p': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
# You can find more information about keymaps in these guides:
# * https://atom.io/docs/latest/using-atom-basic-customization#customizing-key-bindings
# * https://atom.io/docs/latest/behind-atom-keymaps-in-depth
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it here:
# https://github.com/bevry/cson#what-is-cson

# 自動インデント整形
'atom-text-editor':
  'cmd-i': 'editor:auto-indent'

# 矩形選択を Ctrl + Alt ではなく Alt だけでできるようにする : Emmet のキーバインドが重複していたので unset! で無効にする
'atom-text-editor:not([mini])':
  'alt-up': 'unset!'
  'alt-down': 'unset!'

# 矩形選択を Ctrl + Alt ではなく Alt だけでできるようにする
'body':
  'alt-up': 'editor:add-selection-above'
  'alt-down': 'editor:add-selection-below'

# autocomplete --------
# 'atom-workspace atom-text-editor:not([mini]).autocomplete-active':
#   'up': 'my:move-up'
#   'down': 'my:move-down'
  #
  # 'tab': 'core:move-down'
  # 'shift-tab': 'core:move-up'
  # オートコンプリートの候補をタブで移動出来る様にする為の設定です。
  # この設定には追加で「autocomplete-plusの設定＞confirmCompletion: "enter"」を設定する必要があります。
